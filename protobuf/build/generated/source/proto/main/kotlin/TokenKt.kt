//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: bifrost.proto

@kotlin.jvm.JvmName("-initializetoken")
public inline fun token(block: TokenKt.Dsl.() -> kotlin.Unit): BifrostOuterClass.Token =
  TokenKt.Dsl._create(BifrostOuterClass.Token.newBuilder()).apply { block() }._build()
public object TokenKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: BifrostOuterClass.Token.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: BifrostOuterClass.Token.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): BifrostOuterClass.Token = _builder.build()

    /**
     * <code>string token = 1;</code>
     */
    public var token: kotlin.String
      @JvmName("getToken")
      get() = _builder.getToken()
      @JvmName("setToken")
      set(value) {
        _builder.setToken(value)
      }
    /**
     * <code>string token = 1;</code>
     */
    public fun clearToken() {
      _builder.clearToken()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun BifrostOuterClass.Token.copy(block: TokenKt.Dsl.() -> kotlin.Unit): BifrostOuterClass.Token =
  TokenKt.Dsl._create(this.toBuilder()).apply { block() }._build()

